# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nOB06CxvBN14ly4eilD5YhkzcafYrXGw
"""

# 📌 Step 1: Import libraries
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel

# 📌 Step 2: Load dataset from online URL (movies metadata)
# Using a different URL that is known to be working
url = "https://raw.githubusercontent.com/justmarkham/pandas-videos/master/data/imdb_1000.csv"
df = pd.read_csv(url)

# Check first rows
print("✅ Dataset Loaded Successfully!")
print(df.head())

# 📌 Step 3: Use 'genres' as feature (since description not available here)
# The new dataset has 'genres' but needs cleaning as it's in string format
# This dataset has 'genre' column, not 'genres'
df['genre'] = df['genre'].str.replace('|', ' ')
features = df['genre'].fillna("")


# 📌 Step 4: TF-IDF Vectorization
tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(features)

# 📌 Step 5: Compute cosine similarity
cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)

# 📌 Step 6: Recommendation function
def recommend(title, cosine_sim=cosine_sim):
    # Find the index of the movie that matches the title
    # Use .iloc to handle potential multiple matches and get the first index
    # This dataset has 'title' column, not 'movie_title'
    indices = df[df['title'].str.contains(title, case=False, na=False)].index
    if len(indices) == 0:
        return [f"❌ Movie '{title}' not found in dataset!"]
    idx = indices[0]


    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    sim_scores = sim_scores[1:6]  # Top 5 similar movies
    movie_indices = [i[0] for i in sim_scores]
    # Use 'title' column for recommendations
    return df['title'].iloc[movie_indices].tolist()

# 📌 Step 7: Test recommendations
print("\n🎬 Movies similar to 'Avatar':")
print(recommend("Avatar"))

print("\n🎬 Movies similar to 'Spectre':")
print(recommend("Spectre"))